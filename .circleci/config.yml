version: 2
jobs:
  build:
    working_directory: ~/galileo
    docker:
    - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
    - checkout
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "galileo/build.gradle" }}
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "galileo/build.gradle" }}
    - run:
        name: Build
        command: ./gradlew build

  test:
      working_directory: ~/galileo
      docker:
      - image: circleci/android:api-25-alpha
      environment:
        JVM_OPTS: -Xmx3200m
      steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "galileo/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew lint jacocoTestReport
      - save_cache:
          paths:
          - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "galileo/build.gradle" }}
      - store_artifacts:
          path: galileo/build/reports
          destination: reports
      - store_test_results:
          path: galileo/build/test-results
      - run:
          name: Save code coverage
          command: bash <(curl -s https://codecov.io/bash)

  deploy:
    working_directory: ~/galileo
    docker:
    - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
    - checkout
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "galileo/build.gradle" }}
    - run:
        name: Install
        command: ./gradlew clean install
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "galileo/build.gradle" }}
    - run:
        name: Upload to bintray
        command: ./gradlew :galileo:bintrayUpload :galileo-no-op:bintrayUpload

workflows:
  version: 2
  build-test-deploy:
    jobs:
    - build:
        filters:
          tags:
            only: /.*/
    - test:
        requires:
        - build
        filters:
          tags:
            only: /.*/
    - deploy:
        filters:
          tags:
            only: /.*/
          branches:
            ignore: /.*/
