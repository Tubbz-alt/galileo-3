apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'realm-android'
apply plugin: 'jacoco'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'galileo'

    publishedGroupId = 'com.josedlpozo.galileo'
    libraryName = 'Galileo'
    artifact = 'galileo'

    libraryDescription =
        'Android library that helps you to debug applications directly from your android device. Just shake your device to get Galileo to work for you!'

    siteUrl = 'https://github.com/josedlpozo/Galileo'
    gitUrl = 'https://github.com/josedlpozo/Galileo.git'

    libraryVersion = VERSION_NAME

    developerId = 'josedlpozo'
    developerName = 'Jose del Pozo'
    developerEmail = 'josedlpozo@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 27
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName VERSION_NAME
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig{
        vectorDrawables.useSupportLibrary = true
    }
    lintOptions {
        abortOnError false
    }
}

jacoco {
    toolVersion = "0.8.1"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def javaClasses = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def kotlinClasses = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def javaSrc = "$project.projectDir/src/main/java"
    def kotlinSrc = "$project.projectDir/src/main/kotlin"

    sourceDirectories = files([javaSrc, kotlinSrc])
    classDirectories = files([javaClasses, kotlinClasses])
    executionData = fileTree(dir: project.buildDir, includes: ['jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'])
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation 'com.github.josedlpozo:SpringIndicator:2.0.1@aar'
    implementation 'org.cyanogenmod:platform.sdk:6.0'

    implementation 'com.squareup:seismic:1.0.2'

    implementation "io.arrow-kt:arrow-core:0.8.0"
    implementation "io.arrow-kt:arrow-typeclasses:0.8.0"
    implementation "io.arrow-kt:arrow-instances-core:0.8.0"
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation "com.squareup.okhttp3:okhttp:3.11.0"
    api 'com.github.pedrovgs:lynx:1.1.0'

    testImplementation 'junit:junit:4.12'
}

apply from: '../upload_library.gradle'
